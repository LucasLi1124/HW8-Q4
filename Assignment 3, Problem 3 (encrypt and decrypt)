def caesar_encrypt(key, message):
    encrypted_message = []
    for char in message:
        if char.isalpha():
            shift = key % 26
            if char.isupper():
                encrypted_char = chr((ord(char) - ord('A') + shift) % 26 + ord('A'))
            else:
                encrypted_char = chr((ord(char) - ord('a') + shift) % 26 + ord('a'))
            encrypted_message.append(encrypted_char)
        else:
            encrypted_message.append(char)
    return ''.join(encrypted_message)

def caesar_decrypt(key, message):
    decrypted_message = []
    for char in message:
        if char.isalpha():
            shift = key % 26
            if char.isupper():
                decrypted_char = chr((ord(char) - ord('A') - shift) % 26 + ord('A'))
            else:
                decrypted_char = chr((ord(char) - ord('a') - shift) % 26 + ord('a'))
            decrypted_message.append(decrypted_char)
        else:
            decrypted_message.append(char)
    return ''.join(decrypted_message)
key = 12
plaintext = "Experience is the teacher of all things."

# Encrypt the message
encrypted_message = caesar_encrypt(key, plaintext)
print("Encrypted Message:", encrypted_message)

# Decrypt the message
decrypted_message = caesar_decrypt(key, encrypted_message)
print("Decrypted Message:", decrypted_message)
